<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nf.dao.ProductBrandDao">
    <resultMap id="brandMapper" type="com.nf.entity.ProductBrand">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="showStatus" column="show_status"/>
        <result property="productCount" column="product_count"/>
        <result property="productCommentCount" column="product_comment_count"/>
        <result property="logo" column="logo"/>
        <result property="bigPic" column="big_pic"/>
        <result property="brandStory" column="brand_story"/>
    </resultMap>

    <select id="getAll" resultMap="brandMapper">
        select
        id, name, show_status, product_count, product_comment_count, logo, big_pic, brand_story
        from pms_brand
        order by id
    </select>

    <select id="getByName" resultMap="brandMapper">
        select
        id, name, show_status, product_count, product_comment_count, logo, big_pic, brand_story
        from pms_brand
        <where>
            <bind name="pmsname" value="'%' + name + '%'" />
            name like #{pmsname}
        </where>
        order by id
    </select>

    <delete id="deleteById">
        delete from pms_brand where id = #{brandId}
    </delete>

    <insert id="insertBrand">
        insert into pms_brand
        (name, show_status, product_count, product_comment_count, logo, big_pic, brand_story)
        values (#{name},#{showStatus},#{productCount},#{productCommentCount},#{logo},#{bigPic},#{brandStory});
    </insert>

    <update id="editBrand">
        update pms_brand
        <set>
            name=#{name},
            show_status=#{showStatus},
            product_count=#{productCount},
            product_comment_count=#{productCommentCount},
            logo=#{logo},
            big_pic=#{bigPic},
            brand_story=#{brandStory}
        </set>
        <where>
            id=#{id}
        </where>
    </update>
    
    <delete id="batchDeleteById">
        delete from pms_brand
        <where>
            <foreach collection="array" item="id" separator="or" >
                id=#{id}
            </foreach>
        </where>
    </delete>
    
    <update id="batchUpdateStatusById">
        update pms_brand set

        <trim prefix="show_status = case" suffix="end">
            <foreach collection="array" item="brand">
                when id=#{brand.id} then #{brand.showStatus}
            </foreach>
        </trim>
        <where>
            <foreach collection="array" item="brand" separator="or">
                id = #{brand.id}
            </foreach>
        </where>
    </update>

</mapper>